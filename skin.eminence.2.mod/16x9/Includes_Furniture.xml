<?xml version="1.0" encoding="UTF-8"?>
<includes>

<!-- Ajout Include -->    
        <include name="Furniture_Hub_Flags">
            <control type="grouplist">
            <visible>Skin.HasSetting(furniture.showhubflags)</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <bottom>20</bottom>
            <left>side</left>
            <right>side</right>
            <align>right</align>      
            <height>50</height>
            <orientation>horizontal</orientation>            
            <itemgap>5</itemgap>                    
            <control type="image">
                <width>108</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_ratio.png">$INFO[Container(9500).ListItem.VideoAspect,indicator/aspectratio/,.png]</texture>
                <visible>!IsEmpty(Container(9500).ListItem.VideoResolution)</visible>
            </control>
            <control type="image">       
                <width>73</width>                
                <height>50</height>
                <aspectratio>keep</aspectratio>             
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_resolution.png">$INFO[Container(9500).ListItem.VideoResolution,indicator/resolution/,.png]</texture>
                <visible>!IsEmpty(Container(9500).ListItem.VideoResolution)</visible>
            </control>          
            <control type="image">
                <width>130</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">$INFO[Container(9500).ListItem.VideoCodec,indicator/video/,.png]</texture>
                <visible>!IsEmpty(Container(9500).ListItem.VideoCodec)</visible>
            </control>       
            <control type="image">
                <width>130</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_audio.png">$INFO[Container(9500).ListItem.AudioCodec,indicator/audio/,.png]</texture>
                <visible>!IsEmpty(Container(9500).ListItem.AudioCodec)</visible>
            </control>                          
            <control type="image">        
                <width>130</width>             
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_channels.png">$INFO[Container(9500).ListItem.AudioChannels,indicator/channels/,.png]</texture>
                <visible>!IsEmpty(Container(9500).ListItem.AudioChannels)</visible>
            </control>
            <control type="image">            
                <width>73</width>                 
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <visible>!IsEmpty(Container(9500).ListItem.Top250)</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/imdb.png</texture>
            </control>
            <control type="image">             
                <width>73</width>                 
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/bluray.png</texture>
                <visible>[substring(Container(9500).ListItem.FilenameAndPath,bluray) | substring(Container(9500).ListItem.FilenameAndPath,bdrip) | substring(Container(9500).ListItem.FilenameAndPath,bd25) | substring(Container(9500).ListItem.FilenameAndPath,bd50)]</visible>
            </control>
            <control type="image">               
                <width>73</width>               
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/hddvd.png</texture>
                <visible>substring(Container(9500).ListItem.FilenameAndPath,hddvd)</visible>
            </control>
            <control type="image">               
                <width>73</width>             
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/dvd.png</texture>
                <visible>substring(Container(9500).ListItem.FilenameAndPath,dvd) + !substring(Container(9500).ListItem.FilenameAndPath,hddvd)</visible>
            </control>
            <control type="image">               
                <width>73</width>               
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <visible>Container(9500).ListItem.IsStereoscopic</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/3D.png</texture>
            </control>            
        </control>
        </include>    
 
<!-- Ajout Include -->    
        <include name="ClearLogo">
        <control type="image" description="clearlogo">
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>             
            <visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
            <visible>Skin.HasSetting(show.clearlogo)</visible> 
            <visible>!Control.IsVisible(159) + !Control.IsVisible(162)</visible>
            <centertop>115</centertop>
            <centerleft>50%</centerleft>
            <width>400</width>             
            <height>180</height>
            <aspectratio align="center">keep</aspectratio>
            <texture background="true">$VAR[ClearLogoTop]</texture>
        </control>
        </include> 
        
<!-- Ajout Include -->    
        <include name="ClearLogoHub">
        <control type="image" description="clearlogohub">
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>             
            <visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
            <visible>Skin.HasSetting(furniture.showhublogo)</visible>         
            <centertop>115</centertop>
            <centerleft>50%</centerleft>
            <width>400</width>             
            <height>180</height>
            <aspectratio align="center">keep</aspectratio>
            <texture background="true">$VAR[ClearLogoTop]</texture>
        </control>
        </include>               
        
<!-- Ajout Include -->    
        <include name="ClearLogoMusic">
        <control type="image" description="clearlogo">
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>             
            <visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
            <visible>Skin.HasSetting(show.clearlogomusic)</visible>         
            <centertop>115</centertop>
            <centerleft>50%</centerleft>
            <width>400</width>             
            <height>180</height>
            <aspectratio align="center">keep</aspectratio>
            <texture background="true">$VAR[MusicClearLogo]</texture>
        </control>
        </include>            

<include name="Fanart_Fullscreen">
<control type="group">
            <visible allowhiddenfocus="true">Control.HasFocus(90400)</visible>
            <control type="button" id="90400">
                <description>FS Fanart button</description>
                <width>1920</width>
                <height>1080</height>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <onleft>SetFocus(9000)</onleft>
                <onright>SetFocus(9000)</onright>
                <onup>SetFocus(9000)</onup>
                <ondown>SetFocus(9000)</ondown>
                <onclick>SetFocus(9000)</onclick>
                <label>-</label>
                <hitrect x="0" y="0" w="0" h="0"/>
            </control>
            <control type="image">
                <include>FullscreenDimensions</include>
                <texture>$INFO[ListItem.Art(fanart)]</texture>
            </control>
        </control>
</include>

    <!-- OVERLAY -->
    <include name="Furniture_OverlayInfo">

        <control type="button" id="9601">
            <width>1</width>
            <height>1</height>
            <visible allowhiddenfocus="true">false</visible>
            <onback>50</onback>
            <onup>50</onup>
            <ondown>50</ondown>
            <onleft>50</onleft>
            <onright>50</onright>
        </control>

        <control type="group">
            <include condition="StringCompare(Skin.String(timelimit),1)">TimeLimit1</include>
            <include condition="StringCompare(Skin.String(timelimit),2)">TimeLimit2</include>
            <include condition="StringCompare(Skin.String(timelimit),3)">TimeLimit3</include>
            <include condition="StringCompare(Skin.String(timelimit),4)">TimeLimit4</include> 
            <include condition="StringCompare(Skin.String(timelimit),5)">TimeLimit5</include>
            <include condition="StringCompare(Skin.String(timelimit),6)">TimeLimit6</include> 
            <include condition="StringCompare(Skin.String(timelimit),7)">TimeLimit7</include>
            <include condition="StringCompare(Skin.String(timelimit),8)">TimeLimit8</include> 
            <include condition="StringCompare(Skin.String(timelimit),9)">TimeLimit9</include>
            <include condition="StringCompare(Skin.String(timelimit),10)">TimeLimit10</include> 
            <include condition="IsEmpty(Skin.String(timelimit))">TimeLimit4</include>   
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot)</visible>
            <include>Animation_FadeIn</include>
            <control type="image" description="Background">
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="Background">common/white.png</texture>
                <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
            </control>
<!-- Ajout Include -->        
            <include>ClearLogo</include>
        </control>

        <control type="group">
            <left>side</left>
            <right>side</right>
<!-- Modification Top -->            
            <top>230</top>
            <height>690</height>
            <include condition="StringCompare(Skin.String(timelimit),1)">TimeLimit1</include>
            <include condition="StringCompare(Skin.String(timelimit),2)">TimeLimit2</include>
            <include condition="StringCompare(Skin.String(timelimit),3)">TimeLimit3</include>
            <include condition="StringCompare(Skin.String(timelimit),4)">TimeLimit4</include> 
            <include condition="StringCompare(Skin.String(timelimit),5)">TimeLimit5</include>
            <include condition="StringCompare(Skin.String(timelimit),6)">TimeLimit6</include> 
            <include condition="StringCompare(Skin.String(timelimit),7)">TimeLimit7</include>
            <include condition="StringCompare(Skin.String(timelimit),8)">TimeLimit8</include> 
            <include condition="StringCompare(Skin.String(timelimit),9)">TimeLimit9</include>
            <include condition="StringCompare(Skin.String(timelimit),10)">TimeLimit10</include>  
            <include condition="IsEmpty(Skin.String(timelimit))">TimeLimit4</include>  
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot)</visible>
            <include>Animation_SlideIn</include>            

            <control type="label">
                <description>header label</description>
                <left>60</left>
                <right>60</right>
                <font>Font-Header</font>
                <height>45</height>
<!-- Ajout Textcolor -->                
                <textcolor>$VAR[HighlightColor2]</textcolor>
                <label>$VAR[Label_OverlayTitle]</label>
            </control>

            <control type="textbox">
                <description>textarea</description>
                <left>60</left>
                <right>60</right>
                <top>90</top>
                <bottom>0</bottom>
                <align>left</align>
                <font>Font-ListInfo-Big</font>
                <label>$VAR[Label_OverlayPlot]</label>
            </control>
        </control>
    </include>

    <!-- RSS -->
    <include name="Furniture_RSS">
        <control type="group">
            <visible>!Window.IsVisible(DialogKaiToast.xml)</visible>
            <visible>!Window.IsVisible(DialogExtendedProgressBar.xml)</visible>
            <animation effect="slide" start="0,64" end="0" time="125">VisibleChange</animation>
            <control type="image">
                <posx>16</posx>
                <posy>48r</posy>
                <width>32</width>
                <height>32</height>
                <texture colordiffuse="LineLabel">$VAR[Image_RSS_Icon]</texture>
                <!-- <visible>Player.HasMedia | [!Player.HasMedia + [system.getbool(lookandfeel.enablerssfeeds) | Window.IsVisible(SettingsCategory.xml)] + [Window.IsVisible(weather) | Window.IsVisible(home)]]</visible> -->
            </control>
            <control type="label">
                <bottom>16</bottom>
                <left>48</left>
                <right>side</right>
                <height>32</height>
<!-- Ajout Width -->                
                <width>940</width>
<!-- Ajout Scroll -->                
                <scroll>yes</scroll>
                <font>Font-ListInfo-Small-Bold</font>
                <textcolor>LineLabel</textcolor>
                <label>$VAR[Label_RSS,   ,]</label>
<!-- Ajout Visible -->                
                <visible>!Window.IsVisible(SkinSettings.xml)</visible>
            </control>
<!-- Ajout Control -->            
            <control type="label">
                <bottom>16</bottom>
                <left>48</left>
                <right>0</right>
                <height>32</height>                               
                <scroll>true</scroll>
                <font>Font-RSS</font>
                <textcolor>LineLabel</textcolor>
                <label>$VAR[Label_RSS,   ,]</label>
                <wrapmultiline>false</wrapmultiline>
                <visible>!Window.IsVisible(DialogAudioDSPManager.xml)</visible>
                <visible>Window.IsVisible(SkinSettings.xml)</visible>
            </control> 
                       
        </control>
        <control type="grouplist">
            <visible>Skin.HasSetting(furniture.showflags)</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <bottom>20</bottom>
            <left>side</left>
            <right>side</right>
            <align>right</align>
<!-- Modification Height -->            
            <height>50</height>
            <orientation>horizontal</orientation>
<!-- Modification Itemgap -->            
            <itemgap>5</itemgap>     
<!-- Ajout Control -->            
            <control type="image">
                <width>108</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_ratio.png">$INFO[ListItem.VideoAspect,indicator/aspectratio/,.png]</texture>
                <visible>!IsEmpty(ListItem.VideoResolution)</visible>
            </control>
            <control type="image">
<!-- Modification Width -->            
                <width>73</width>
<!-- Modification Height -->                
                <height>50</height>
                <aspectratio>keep</aspectratio>
<!-- Modification Fallback -->                
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_resolution.png">$INFO[ListItem.VideoResolution,indicator/resolution/,.png]</texture>
                <visible>!IsEmpty(ListItem.VideoResolution)</visible>
            </control>
<!-- Ajout Control -->            
            <control type="image">
                <width>130</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">$INFO[ListItem.VideoCodec,indicator/video/,.png]</texture>
                <visible>!IsEmpty(ListItem.VideoCodec)</visible>
            </control> 
<!-- Ajout Control -->            
            <control type="image">
                <width>130</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_audio.png">$INFO[ListItem.AudioCodec,indicator/audio/,.png]</texture>
                <visible>!IsEmpty(ListItem.AudioCodec)</visible>
            </control>                          
            <control type="image">
<!-- Modification Width -->            
                <width>130</width>
<!-- Modification Height -->                
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_channels.png">$INFO[ListItem.AudioChannels,indicator/channels/,.png]</texture>
                <visible>!IsEmpty(ListItem.AudioChannels)</visible>
            </control>
            <control type="image">
<!-- Modification Width -->               
                <width>73</width>
<!-- Modification Height -->                  
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <visible>!IsEmpty(ListItem.Top250)</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/imdb.png</texture>
            </control>
            <control type="image">
<!-- Modification Width -->               
                <width>73</width>
<!-- Modification Height -->                  
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/bluray.png</texture>
                <visible>[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]</visible>
            </control>
            <control type="image">
<!-- Modification Width -->               
                <width>73</width>
<!-- Modification Height -->                  
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/hddvd.png</texture>
                <visible>substring(ListItem.FilenameAndPath,hddvd)</visible>
            </control>
            <control type="image">
<!-- Modification Width -->               
                <width>73</width>
<!-- Modification Height -->                  
                <height>50</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/dvd.png</texture>
                <visible>substring(ListItem.FilenameAndPath,dvd) + !substring(ListItem.FilenameAndPath,hddvd)</visible>
            </control>
            <control type="image">
<!-- Modification Width -->               
                <width>73</width>
<!-- Modification Height -->                  
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <visible>ListItem.IsStereoscopic</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback_others.png">indicator/3D.png</texture>
            </control>
<!-- Ajout Control Groupe Duration -->  
           <control type="group">
                <width>150</width>
                <height>50</height>
            <control type="image">
                <width>150</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/time.png</texture>
                <visible>!substring(Container.FolderPath,plugin://,left) + !IsEmpty(ListItem.Duration) + !Container.Content(songs)</visible>
            </control>            
            <control type="label">
                <width>93</width>
                <centertop>47%</centertop>
                <height>50</height>
                <posx>54</posx>
                <align>center</align>
                <aligny>center</aligny>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItemDuration)]</label>
                <font>Font-Flag</font>
                <textcolor>LineLabel</textcolor>
                <visible>!substring(Container.FolderPath,plugin://,left) + !IsEmpty(ListItem.Duration) + !Container.Content(songs)</visible>
            </control>
          </control> 
<!-- Ajout Control Groupe FinishTime -->  
          <control type="group">
                <width>162</width>
                <height>50</height>
            <control type="image">
                <width>162</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/finishtime.png</texture>
                <visible>!substring(Container.FolderPath,plugin://,left)  + !IsEmpty(ListItem.EndTime) + !substring(ListItem.Path,videodb://movies/sets,left) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(genres)</visible>
            </control>            
            <control type="label">
                <width>105</width>
                <centertop>47%</centertop>
                <height>50</height>
                <posx>54</posx>
                <align>center</align>
                <aligny>center</aligny>
                <label>$INFO[ListItem.EndTime]</label>
                <font>Font-Flag</font>
                <textcolor>LineLabel</textcolor>
                <visible>!substring(Container.FolderPath,plugin://,left) + !substring(ListItem.Path,videodb://movies/sets,left) + !IsEmpty(ListItem.EndTime) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(genres)</visible>
            </control>
            </control>  
            
            <control type="group">
            <width>260</width>
            <height>50</height>
            <visible>!Container.Content(movies)</visible>
            <visible>Container.Content(tvshows) | Container.Content(seasons)</visible>
                <control type="image" description="button back">
                    <width>260</width>
                    <height>50</height>
                    <texture colordiffuse="LineLabel">common/cadre_episodes.png</texture>                  
                </control>
                <control type="label">
                    <width>260</width>
                    <height>50</height>
                    <centertop>47%</centertop>
                    <align>center</align>
                    <aligny>center</aligny>                
                    <label>$VAR[DefEpisodesFlags]</label>
                    <font>Font-Flag</font>               
                    <textcolor>LineLabel</textcolor>                    
                </control>
            </control>       
            
                                
        </control>

<!-- Ajout Control Grouplist -->
        <control type="grouplist">
            <visible>Skin.HasSetting(furniture.showflags)</visible>
            <visible>substring(ListItem.Path,videodb://movies/sets,left)</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <bottom>5</bottom>
            <left>side</left>
            <right>side</right>
            <align>right</align>         
            <height>100</height>
            <orientation>horizontal</orientation>            
            <itemgap>7</itemgap>
            <control type="image">
                    <width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.0.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.0.Poster))</visible>
	  </control>
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.1.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.1.Poster))</visible>
	  </control> 
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.2.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.2.Poster))</visible>
	  </control>     
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.3.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.3.Poster))</visible>
	  </control>
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.4.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.4.Poster))</visible>
	  </control>  
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.5.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.5.Poster))</visible>
	  </control>        
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.6.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.6.Poster))</visible>
	  </control> 
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.7.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.7.Poster))</visible>
	  </control> 
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.8.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.8.Poster))</visible>
	  </control> 
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.9.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.9.Poster))</visible>
	  </control> 
	  <control type="image">
		<width>67</width>
		<height>100</height>
		<texture diffuse="common/white.png">$INFO[Window(Home).Property(SkinHelper.MovieSet.10.Poster)]</texture>
		<visible>!IsEmpty(Window(home).Property(SkinHelper.MovieSet.10.Poster))</visible>
	  </control> 
            </control>     

        
    </include>

    <!-- BACKGROUND -->
    <include name="Furniture_Background">
        <control type="videowindow">
            <visible>Skin.HasSetting(background.showvideo)</visible>
            <visible>Player.HasVideo</visible>
            <visible>!Window.IsVisible(weather)</visible>
            <width>100%</width>
            <height>100%</height>
        </control>
        <control type="multiimage">
            <width>100%</width>
            <height>100%</height>
            <fadetime>600</fadetime>
            <randomize>true</randomize>
            <timeperimage>5000</timeperimage>
            <imagepath background="true">$VAR[Image_Background]</imagepath>
            <aspectratio>scale</aspectratio>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(background.animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(background.animate)">Conditional</animation>
            <visible>!Player.HasVideo | [Player.HasVideo + !Skin.HasSetting(background.showvideo)] | Window.IsVisible(weather)</visible>
        </control>
<!-- Ajout Control -->        
        <control type="image" description="Fanart Fade">
            <width>100%</width>
            <height>100%</height>         
            <texture colordiffuse="$VAR[Background_Color]">common/white.png</texture>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
            <visible>!Skin.HasSetting(global.backpanelmode)</visible>
            <visible>!Window.IsVisible(SettingsCategory.xml) + !Window.IsVisible(Settings.xml) + !Window.IsVisible(SettingsProfile.xml) + !Window.IsVisible(SettingsSystemInfo.xml) + !Window.IsVisible(SkinSettings.xml) + !Window.IsVisible(AddonBrowser.xml)</visible>
        </control>
        <control type="image" description="Fanart Fade">
            <width>100%</width>
            <height>100%</height>            
            <texture colordiffuse="FanartFade">common/white.png</texture>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
            <visible>!Skin.HasSetting(global.backpanelmode)</visible>
<!-- Ajout Visible -->            
            <visible>Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(Settings.xml) | Window.IsVisible(SettingsProfile.xml) | Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SkinSettings.xml) | Window.IsVisible(AddonBrowser.xml)</visible>
        </control>
        <control type="image">
            <bottom>0</bottom>
            <width>100%</width>
<!-- Modification Height -->            
            <height>100%</height>
            <texture colordiffuse="7f000000" flipy="true">common/gradient.png</texture>
            <visible>Skin.HasSetting(global.backpanelmode)</visible>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
        </control>
        <control type="group">
            <top>210</top>
            <bottom>0</bottom>
            <width>100%</width>
            <visible>Skin.HasSetting(global.backpanelmode)</visible>
            <visible>Skin.HasSetting(furniture.showflags)</visible>
            <include>Dialog_Background</include>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
        </control>
        <control type="group">
            <top>210</top>
            <bottom>64</bottom>
            <width>100%</width>
            <visible>Skin.HasSetting(global.backpanelmode)</visible>
            <visible>!Skin.HasSetting(furniture.showflags)</visible>
            <include>Dialog_Background</include>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
        </control>

        <control type="image" description="Transition Fade">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="Background">common/white.png</texture>
            <animation effect="fade" start="0" end="100" time="400">WindowClose</animation>
            <animation effect="fade" end="0" start="100" time="400">WindowOpen</animation>
        </control>
        <control type="image" description="Background Overlay">
            <width>100%</width>
            <height>100%</height>
            <fadetime>1000</fadetime>
            <texture colordiffuse="4f777777">$INFO[Skin.String(global.background)]</texture>
            <visible>!IsEmpty(Skin.String(global.background)) + !Skin.HasSetting(global.backpanelmode)</visible>
            <animation effect="fade" end="100" start="0" time="250" condition="Window.Previous(home) | Window.Previous(visualisation) | Window.Previous(fullscreenvideo)">WindowOpen</animation>
            <animation effect="fade" end="0" start="100" time="250" condition="Window.Next(home)">WindowClose</animation>
            <visible>!Window.IsVisible(home) + !Window.IsVisible(visualisation)</visible>
        </control>       
    </include>

    <!-- TOP BAR -->
    <variable name="Furniture_TopBar_Tile_BGCOLOR">
        <value condition="Skin.HasSetting(header.colormatch)">$VAR[HighlightColor]</value>
        <value condition="VideoPlayer.IsFullscreen + [Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)]">PosterBorder</value>
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather) | Skin.HasSetting(global.backpanelmode)">$VAR[HomeBar_Color]</value>
        <value>PosterBorder</value>
    </variable>
    <variable name="Furniture_TopBar_MainLabel_Color">
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather) | Skin.HasSetting(global.backpanelmode)">HomeMainLabel</value>
        <value>MainLabel</value>
    </variable>
    <variable name="Furniture_TopBar_SubLabel_Color">
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather) | Skin.HasSetting(global.backpanelmode)">HomeSubLabel</value>
        <value>SubLabel</value>
    </variable>
    <variable name="Furniture_TopBar_Header_MainLabel">
        <value condition="Window.IsVisible(DialogBusy.xml)">$LOCALIZE[20186]...</value>
        <value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">$LOCALIZE[31145]</value>
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31149]</value>
        <value condition="Window.IsVisible(filemanager)">$LOCALIZE[7]</value>
        <value condition="Window.IsVisible(MyWeather.xml)">$LOCALIZE[8]</value>
        <value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(10)">$LOCALIZE[19032]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(11)">$LOCALIZE[19030]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(12)">$LOCALIZE[19031]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(13)">$LOCALIZE[19029]</value>
        <value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
        <value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
        <value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
        <value condition="stringcompare(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]</value>
        <value condition="stringcompare(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]</value>
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.TvShowTitle) + substring(Container.FolderPath,videodb://tvshows/titles/)">[CAPITALIZE]$INFO[ListItem.TvShowTitle][/CAPITALIZE]</value>
        <value condition="!IsEmpty(Container.FolderName)">[CAPITALIZE]$INFO[Container.FolderName][/CAPITALIZE]</value>
        <value condition="Window.IsVisible(home) + IsEmpty(Skin.String(home.mainheadertext))">$LOCALIZE[31158]</value>
        <value condition="Window.IsVisible(home) + !IsEmpty(Skin.String(home.mainheadertext))">$INFO[Skin.String(home.mainheadertext)]</value>
        <value condition="Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsVisible(SettingsCategory.xml) | Window.IsActive(addonbrowser) | Window.IsVisible(SkinSettings.xml)">$VAR[Label_SettingsHeader]</value>
        <value condition="Window.IsVisible(settings)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(EventLog.xml)">$LOCALIZE[14111]</value>     
        <value>$LOCALIZE[15100]</value>
    </variable>
    <variable name="Furniture_Counter_Movies">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Movies.UnWatched)][/COLOR] $LOCALIZE[20342]</value>
    </variable>
    <variable name="Furniture_Counter_Tvshows">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Tvshows.Count),0) + IntegerGreaterThan(Window(home).Property(Tvshows.Count),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Tvshows.Count)][/COLOR] $LOCALIZE[20343]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Tvshows.Count),0) + !IntegerGreaterThan(Window(home).Property(Tvshows.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Tvshows.Count)][/COLOR] $LOCALIZE[20343]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Tvshows.UnWatched),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Tvshows.UnWatched)][/COLOR] $LOCALIZE[20343]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Tvshows.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Tvshows.UnWatched)][/COLOR] $LOCALIZE[20343]</value>
    </variable>
    <variable name="Furniture_Counter_Episodes">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + IntegerGreaterThan(Window(home).Property(Movies.Count),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.Count)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.Count)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.UnWatched)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.UnWatched)][/COLOR] $LOCALIZE[20360]</value>
    </variable>
    <variable name="Furniture_Counter_Songs">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + [IntegerGreaterThan(Window(home).Property(Episodes.Count),0) | IntegerGreaterThan(Window(home).Property(Movies.Count),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + [IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) | IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) + !IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
    </variable>
    <variable name="Furniture_Counter_Channels">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + [IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) | IntegerGreaterThan(Window(home).Property(Episodes.Count),0) | IntegerGreaterThan(Window(home).Property(Movies.Count),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + !IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + [IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) | IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) | IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + !IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) + !IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
    </variable>
    <variable name="Furniture_TopBar_Header_SubLabel">
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(NextAired.Total)][/COLOR] $LOCALIZE[31084]  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(NextAired.TodayTotal)][/COLOR] $LOCALIZE[31085]</value>
        <value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[20115]</value>
        <value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">[COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(TotalItems)][/COLOR] $LOCALIZE[31001]  •  $LOCALIZE[31067] [COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(CurrentPage)][/COLOR] $LOCALIZE[20163] [COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(TotalPages)][/COLOR]</value>
<!-- Modification Value -->        
        <value condition="!IsEmpty(Container.NumItems)">[COLOR=$VAR[HighlightColor2]]$INFO[Container.NumItems][/COLOR] $LOCALIZE[31001]  •  $LOCALIZE[31067] [COLOR=$VAR[HighlightColor2]]$INFO[Container.CurrentPage][/COLOR] $LOCALIZE[20163] [COLOR=$VAR[HighlightColor2]]$INFO[Container.NumPages][/COLOR]</value>
        <value condition="!IsEmpty(Skin.String(home.subheadertext))">$INFO[Skin.String(home.subheadertext)]</value>
        <value condition="Pvr.IsRecording">[COLOR=$VAR[HighlightColor2]]$LOCALIZE[19158]...[/COLOR]$INFO[Pvr.NowRecordingTitle,  ,]$INFO[Pvr.NowRecordingChannel,  ,]</value>
        <value condition="Pvr.HasTimer">[COLOR=$VAR[HighlightColor2]]$LOCALIZE[19157]...[/COLOR]$INFO[Pvr.NextRecordingTitle,  ,]$INFO[Pvr.NextRecordingDateTime,  ,]$INFO[Pvr.NextRecordingChannel,  ,]</value>
        <value>$VAR[Furniture_Counter_Movies]$VAR[Furniture_Counter_Tvshows]$VAR[Furniture_Counter_Episodes]$VAR[Furniture_Counter_Songs]$VAR[Furniture_Counter_Channels]</value>
    </variable>
    <variable name="Furniture_TopBar_Tile_Text">
        <value condition="Window.IsVisible(DialogBusy.xml)">$LOCALIZE[503]</value>
        <value condition="Window.IsVisible(DialogMuteBug.xml)">$LOCALIZE[31013]</value>
        <value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31070]</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)]">$VAR[Label_PlayerStatus]</value>
        <value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
        <value condition="Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(EventLog.xml) | Window.IsVisible(systeminfo)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
        <value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
        <value condition="Window.IsVisible(MyMusicPlaylist.xml)">$LOCALIZE[559]</value>
        <value condition="!IsEmpty(Window(home).Property(Header.Label))">$INFO[Window(home).Property(Header.Label)]</value>
        <value>$LOCALIZE[10000]</value>
    </variable>
    <variable name="Furniture_TopBar_Tile_Icon">
        <value condition="Window.IsVisible(DialogMuteBug.xml)">special://skin/extras/icons/mute.png</value>
        <value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">special://skin/extras/icons/infobubble.png</value>
<!-- Modifications des Value -->        
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasAudio + Player.Playing">osd/player_status/play.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasAudio + Player.Paused">osd/player_status/pause.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasAudio + Player.Forwarding">osd/player_status/FF.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasAudio + Player.Rewinding">osd/player_status/RW.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + Player.Playing">osd/player_status/play.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + Player.Paused">osd/player_status/pause.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + Player.Forwarding">osd/player_status/FF.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + Player.Rewinding">osd/player_status/RW.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + VideoPlayer.Content(livetv)">special://skin/extras/icons/livetv.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo">special://skin/extras/icons/video-addons.png</value>
        <value condition="Window.IsVisible(weather)">special://skin/extras/icons/sun.png</value>
        <value condition="Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">special://skin/extras/icons/settings.png</value>
        <value condition="Window.IsVisible(EventLog.xml) | Window.IsVisible(systeminfo)">special://skin/extras/icons/settings.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml)">special://skin/extras/icons/addons.png</value>
        <value condition="Window.IsVisible(MyMusicPlaylist.xml)">special://skin/extras/icons/playlist.png</value>
        <value condition="Window.IsVisible(FileManager.xml)">special://skin/extras/icons/database.png</value>
        <value condition="!IsEmpty(Window(home).Property(Header.Icon)) + substring(Window(home).Property(Header.Icon),special://skin/extras/icons/)">$INFO[Window(home).Property(Header.Icon)]</value>
        <value>special://skin/extras/icons/home.png</value>
    </variable>
    <include name="Furniture_TopBar_Tile">
        <control type="image">
            <posy>18</posy>
            <posx>-88</posx>
            <width>300</width>
            <height>164</height>    
            <texture align="left" border="75">common/header.png</texture>
            <colordiffuse>$VAR[Furniture_TopBar_Tile_BGCOLOR]</colordiffuse>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [Window.IsVisible(home) | Window.IsVisible(weather)]">Conditional</animation>
<!-- Ajout Visible -->             
            <visible>IsEmpty(Skin.String(HeaderStyle)) | Skin.String(HeaderStyle, beveledheadertile)</visible>
            <visible>![Window.IsVisible(visualisation) + Skin.HasSetting(osdmusic.disabletile)]</visible>
            <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            <visible>[VideoPlayer.IsFullscreen | !Skin.HasSetting(disable.headertile)]</visible>
        </control>
<!-- Ajout Control -->        
        <control type="image">
            <posy>18</posy>
            <posx>-88</posx>
            <width>300</width>
            <height>164</height>    
            <texture align="left" border="75">common/header_rounded.png</texture>
            <colordiffuse>$VAR[Furniture_TopBar_Tile_BGCOLOR]</colordiffuse>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [Window.IsVisible(home) | Window.IsVisible(weather)]">Conditional</animation>
            <visible>Skin.String(HeaderStyle, roundedheadertile)</visible>
            <visible>![Window.IsVisible(visualisation) + Skin.HasSetting(osdmusic.disabletile)]</visible>
           <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
           <visible>[VideoPlayer.IsFullscreen | !Skin.HasSetting(disable.headertile)]</visible>
        </control>
<!-- Ajout Control -->           
        <control type="image">
            <posy>18</posy>
            <posx>-88</posx>
            <width>300</width>
            <height>164</height>    
            <texture align="left" border="75">common/header_square.png</texture>
            <colordiffuse>$VAR[Furniture_TopBar_Tile_BGCOLOR]</colordiffuse>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [Window.IsVisible(home) | Window.IsVisible(weather)]">Conditional</animation>
            <visible>Skin.String(HeaderStyle, squaredheadertile)</visible>
            <visible>![Window.IsVisible(visualisation) + Skin.HasSetting(osdmusic.disabletile)]</visible>
            <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            <visible>[VideoPlayer.IsFullscreen | !Skin.HasSetting(disable.headertile)]</visible>
        </control>
    </include>
    <include name="Furniture_TopBar_Tile_Content">        
        <control type="image">
            <posy>10</posy>
            <posx>30</posx>
            <width>128</width>
            <height>128</height>    
            <texture>$VAR[Furniture_TopBar_Tile_Icon]</texture>
            <aspectratio>keep</aspectratio>
            <colordiffuse>HomeBarFG</colordiffuse>
            <visible>!Container.Scrolling</visible>
            <visible>!Window.IsVisible(DialogBusy.xml)</visible>
            <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            <visible>[VideoPlayer.IsFullscreen | !Skin.HasSetting(disable.headertile)]</visible>
<!-- Ajout Visible -->            
            <visible>![Window.IsVisible(visualisation) + Skin.HasSetting(osdmusic.disabletile)]</visible>
            <animation type="Visible">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" delay="2000" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" delay="2000" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out"/>
            </animation>
        </control>
        <control type="group">
            <visible>Container.Scrolling</visible>
            <visible>!Window.IsVisible(DialogBusy.xml)</visible>
            <animation type="Visible">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" delay="2000" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out" delay="2000" />
            </animation>
            <control type="label">
                <posy>25</posy>
                <posx>30</posx>
                <width>128</width>
                <height>100</height>
                <aligny>top</aligny>
                <align>center</align>
                <font>Font-Header</font>
                <label>$INFO[ListItem.SortLetter]</label>
                <textcolor>HomeBarFG</textcolor>
                <visible>!Skin.HasSetting(disable.headertile)</visible>
            </control>
        </control>
        <control type="label">
            <posx>0</posx>
            <posy>120</posy>
            <width>184</width>
            <aligny>top</aligny>
            <font>Font-Sublabel</font>
            <align>center</align>
            <textcolor>HomeBarFG</textcolor>
            <label>$VAR[Furniture_TopBar_Tile_Text]</label>
<!-- Ajout Visible -->            
            <visible>![Window.IsVisible(visualisation) + Skin.HasSetting(osdmusic.disabletile)]</visible>
            <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            <visible>[VideoPlayer.IsFullscreen | !Skin.HasSetting(disable.headertile)]</visible>
        </control>
    </include>
    <include name="Furniture_TopBar_Header">
        <!-- Nothing Playing -->
        <control type="group">
            <visible>![VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)]</visible>
            <visible>!Skin.HasSetting(disable.mainheader)</visible>
            <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            <control type="label">
                <posx>245</posx>
                <posy>25</posy>
                <width>1200</width>
                <height>100</height>
                <font>Font-Header</font>
                <label>$VAR[Furniture_TopBar_Header_MainLabel]</label>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
                <visible>!Skin.HasSetting(disable.headertile)</visible>
            </control>
            <control type="label">
                <posx>35</posx>
                <posy>25</posy>
                <width>1200</width>
                <height>100</height>
                <font>Font-Header</font>
                <label>$VAR[Furniture_TopBar_Header_MainLabel]</label>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
                <visible>Skin.HasSetting(disable.headertile)</visible>
            </control>
            <control type="label">
                <posx>245</posx>
                <posy>115</posy>
                <width>1100</width>
                <font>Font-Sublabel</font>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <label>$VAR[Furniture_TopBar_Header_SubLabel]</label>
                <visible>!Skin.HasSetting(disable.headertile)</visible>
            </control>
            <control type="label">
                <posx>35</posx>
                <posy>115</posy>
                <width>1050</width>
                <font>Font-Sublabel</font>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <label>$VAR[Furniture_TopBar_Header_SubLabel]</label>
                <visible>Skin.HasSetting(disable.headertile)</visible>
            </control>
        </control>
        <!-- Something Playing -->
        <control type="group">
<!-- Modification Visible -->        
            <visible>VideoPlayer.IsFullscreen</visible>
<!-- Ajout Visible -->            
            <visible>!Window.IsVisible(visualisation)</visible>
            <control type="label">
                <posx>245</posx>
                <posy>25</posy>
                <width>1200</width>
                <height>100</height>
                <font>Font-Header</font>
                <scroll>yes</scroll>
                <label>$INFO[Player.Title]</label>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
            </control>
            <control type="grouplist">
                <posx>245</posx>
                <posy>115</posy>
                <width>1050</width>
                <orientation>horizontal</orientation>
                <itemgap>0</itemgap>
                <visible>!IsEmpty(Player.Duration) + Player.HasVideo</visible>
                <control type="label">
                    <width max="400">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>[COLOR=$VAR[HighlightColor2]]$VAR[Label_HeaderDirector][/COLOR]</label>
                    <visible>!VideoPlayer.Content(livetv)</visible>
                </control>
                <control type="label">
                    <width max="730">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
<!--                    <label>[COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.ChannelName][/COLOR]</label>-->
					<label>[COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.ChannelNumberLabel ,,  ]$INFO[VideoPlayer.ChannelName][/COLOR]$INFO[Player.FinishTime,  $LOCALIZE[31071] ,]$INFO[VideoPlayer.NextTitle,   $LOCALIZE[31003]... ,]</label>
                    <visible>VideoPlayer.Content(livetv)</visible>
                </control>
<!-- Suppression Control -->                
                <!--<control type="label">
                    <width>auto</width>
                    <font>Font-Sublabel</font>
                    <align>left</align>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.FinishTime,  $LOCALIZE[31071] ,]</label>
                </control>-->
<!-- Suppression Control -->                  
                <!--<control type="label">
                    <width>330</width>
                    <font>Font-Sublabel</font>
                    <align>right</align>
                    <aligny>top</aligny>
                    <visible>!VideoPlayer.Content(livetv)</visible>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.Time(hh:mm:ss),  •  ,]$INFO[Player.Duration(hh:mm:ss), / ,]</label>
                </control>-->
            </control>
            <control type="grouplist">
                <posx>245</posx>
                <posy>115</posy>
                <width>1050</width>
                <orientation>horizontal</orientation>
                <itemgap>0</itemgap>
                <visible>!IsEmpty(Player.Duration) + !Player.HasVideo</visible>
                <control type="label">
                    <width max="830">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>[COLOR=$VAR[HighlightColor2]]$INFO[MusicPlayer.Artist][/COLOR]</label>
                </control>
                <control type="label">
                    <width>320</width>
                    <font>Font-Sublabel</font>
                    <align>left</align>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.Time(hh:mm:ss),  ,]$INFO[Player.Duration(hh:mm:ss), / ,]</label>
                </control>
            </control>
        </control>
    </include>
    <include name="Furniture_TopBar_Clock">
        <control type="group">
            <posx>400r</posx>
            <visible>!Skin.HasSetting(disable.clockheader)</visible>
<!-- Ajout Visible -->            
            <visible>!Window.IsVisible(visualisation)</visible>
            <animation effect="slide" start="0" end="92" condition="Skin.HasSetting(disable.weatherheader)">Conditional</animation>
            <control type="image">
                <posx>284</posx>
                <posy>28</posy>
                <width>100</width>
                <height>100</height>
                <fadetime>350</fadetime>
                <aspectratio aligny="center" align="center">keep</aspectratio>
                <texture colordiffuse="$VAR[Furniture_TopBar_MainLabel_Color]">$INFO[Weather.FanartCode,weather-icons/,.png]</texture>
                <visible>!Skin.HasSetting(disable.weatherheader)</visible>
                <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            </control>
            <control type="label">
                <posx>268</posx>
                <posy>115</posy>
                <width>128</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>center</align>
                <aligny>top</aligny>
                <label>$INFO[Weather.Temperature]</label>
                <visible>!Skin.HasSetting(disable.weatherheader)</visible>
                <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>25</posy>
                <width>300</width>
                <height>100</height>
                <font>Font-Header</font>
                <align>right</align>
                <aligny>top</aligny>
                <label>$INFO[System.Time(hh:mm)]</label>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
                <animation effect="slide" start="0" end="-58" condition="!IsEmpty(System.Time(xx))">Conditional</animation>
               <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>71</posy>
                <width>100</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Time(xx)]</label>
                <visible>!Control.HasFocus(9002) + !IsEmpty(System.Time(xx)) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>115</posy>
                <width>500</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Date]</label>
                <visible>!Control.HasFocus(9002) + ![Control.HasFocus(9000) + Window.IsVisible(DialogButtonMenu.xml)] + !Window.IsVisible(Custom_Password.xml)</visible>
            </control>
        </control>   
 
<!-- Ajout Control Group -->        
      <control type="group">
            <posx>400r</posx>
            <visible>!Skin.HasSetting(osdmusic.disableclock)</visible>
            <visible>Window.IsVisible(visualisation)</visible>
            <animation effect="slide" start="0" end="92" condition="Skin.HasSetting(disable.weatherheader)">Conditional</animation>
            <control type="image">
                <posx>284</posx>
                <posy>28</posy>
                <width>100</width>
                <height>100</height>
                <fadetime>350</fadetime>
                <aspectratio aligny="center" align="center">keep</aspectratio>
                <texture colordiffuse="$VAR[Furniture_TopBar_MainLabel_Color]">$INFO[Weather.FanartCode,weather-icons/,.png]</texture>
                <visible>!Skin.HasSetting(osdmusic.disableweather)</visible>
            </control>
            <control type="label">
                <posx>268</posx>
                <posy>115</posy>
                <width>128</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>center</align>
                <aligny>top</aligny>
                <label>$INFO[Weather.Temperature]</label>
                <visible>!Skin.HasSetting(osdmusic.disableweather)</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>25</posy>
                <width>300</width>
                <height>100</height>
                <font>Font-Header</font>
                <align>right</align>
                <aligny>top</aligny>
                <label>$INFO[System.Time(hh:mm)]</label>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
                <animation effect="slide" start="0" end="-58" condition="!IsEmpty(System.Time(xx))">Conditional</animation>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>71</posy>
                <width>100</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Time(xx)]</label>
                <visible>!IsEmpty(System.Time(xx))</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>115</posy>
                <width>500</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(dd MMM yyyy)]</label>
            </control>
        </control>  
        
        
    </include>
    <include name="Furniture_TopBar">
        <!-- <include>GlobalInfoOverlay</include> -->
        <control type="group">
            <visible>[Window.IsVisible(home) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]] | [Window.IsVisible(DialogSeekBar.xml) + [Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Player.ShowInfo | Window.IsVisible(DialogFullScreenInfo.xml) | Window.IsVisible(musicosd) | Window.IsVisible(videoosd)]] | Window.IsVisible(DialogBusy.xml) | ![Window.IsVisible(home) | Window.IsVisible(DialogSeekBar.xml)] | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>            
            <animation type="Visible">
                <effect type="slide" start="0,-32" end="0" time="200" tween="quadratic" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" end="0" start="100" time="200" />
            </animation>
            <control type="image">
                <width>100%</width>
<!-- Modification Height -->                 
                <height>100%</height>
                <texture colordiffuse="7f000000">common/gradient.png</texture>
                <visible>Skin.HasSetting(global.backpanelmode) | Window.IsVisible(weather) | Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)</visible>
            </control>
            <control type="group">
                <include>Furniture_TopBar_Header</include>
<!-- Ajout Visible -->                
                <visible>![Window.IsVisible(MyVideoNav.xml) + Skin.HasSetting(show.clearlogo)] + ![Window.IsVisible(MyMusicNav.xml) + Skin.HasSetting(show.clearlogomusic)] + ![Window.IsVisible(Custom_Hub_1101.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1102.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1103.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1104.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1105.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1106.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1107.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1108.xml) + Skin.HasSetting(furniture.showhublogo)] + ![Window.IsVisible(Custom_Hub_1109.xml) + Skin.HasSetting(furniture.showhublogo)]</visible>
            </control>
            <include>Furniture_TopBar_Clock</include>
        </control>
        <control type="group">
            <visible>[Window.IsVisible(home) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]] | [Window.IsVisible(DialogSeekBar.xml) + [Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Player.ShowInfo | Window.IsVisible(DialogFullScreenInfo.xml) | Window.IsVisible(musicosd) | Window.IsVisible(videoosd)]] | Window.IsVisible(DialogBusy.xml) | Window.IsActive(DialogVolumeBar.xml) | Window.IsActive(DialogMuteBug.xml) | ![Window.IsVisible(home) | Window.IsVisible(DialogSeekBar.xml)] | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,-32" end="0" time="200" tween="quadratic" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" end="0" start="100" time="200" />
            </animation>
            <include>Furniture_TopBar_Tile</include>
            <control type="group">
                <visible>!Window.IsVisible(DialogVolumeBar.xml)</visible>
                <include>Furniture_TopBar_Tile_Content</include>
            </control>
        </control>
    </include>
    
</includes>